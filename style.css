
body * {
    /* border: 1px solid purple; */
}

body {
    /* border: 5px solid pink; */
}

.container * {
    /* border: 1px solid purple; */
}

/* Start */

p {
    margin:0;
}


:root {
    --max-width: 800px;
    --size: 1.5rem;
    --font-size: 1.5rem; 


    --background-transition-speed: 500ms
}

.light {
    --background-color: white;
    --text-color: rgb(5, 5, 50);
}
.dark {
    --background-color: rgb(5, 5, 50);
    --text-color: white;
}

/* dark mode button */
/* Dark mode is controlled by adding dark or light class to body w/ javascripts */

#dark-button, 
#light-button {
    border: 3px solid black;
    
    width: var(--size);
    height: calc(var(--size) * 1.2);
    padding:0;

    /* position: absolute; */
    position: fixed;
    z-index: 100;
    top: 3px;
    right: 4px;

    transition: opacity 500ms;
}
#dark-button *, 
#light-button *{
    margin: 0;
    line-height: 100%;
}

.light #dark-button {
    opacity: 0%;
}
.dark #light-button {
    opacity: 0%;
}
/* ------ */


body{
    background-color: var(--background-color);
    transition: background-color var(--background-transition-speed);
    color: var(--text-color);
    
    margin-top: 0;
margin-bottom: 0;
    /* For footer primarily */
    display: flex;
    flex-direction: column;
    min-height:100vh;
}

#main-div{
    flex:1;
}


* {
    font-size: calc(var(--font-size) * 1);
}
/*  */

.dark a:visited{
    color: mediumorchid;
}
.dark a:link{
    color: lightskyblue;
}

a:visited {
    /* transition: color 6099ms; */
}




#main-div {
    display:flex;
    flex-direction: column;
    align-items: center;

    margin: 0px 7px;



}

.container {
    /* border: 1px solid magenta; */
    
    width: 100%;
    max-width: var(--max-width);
    /* background-color: pink; */
    
}





#title {
    text-align: center;
    text-decoration: underline;
    font-size: calc(var(--font-size) * 1.2);


    color: var(--text-color);
    transition: color 600ms;
    
}

.button-and-slider-container {
    position: sticky;
    top: 0px;
    padding-top: 10px;
    background-color: var(--background-color);
    transition: background-color var(--background-transition-speed);
}


.main-button-container {
    /* position: sticky;
    top: 0px;
    padding-top: 10px;
    background-color: var(--background-color); */

    
    display: flex;
    justify-content: space-around;
    align-items: center;
    /* flex-wrap: wrap; */
}
.main-button {
    width: 100%;
    height: 100%;
    padding: calc(var(--size) * 0.66);


    /* background-color: rgb(56, 0, 130);  */
    /* color: ivory; */

    /* border: 2px solid rgb(0, 71, 163); */
    border-radius: 0.3rem;


    align-self: flex-start;
    
    /* display: flex; */

}
/* Replace Split universe text with split text if screen is small  so that button doesn't take two lines. 
Not sure if this is best approach or not*/
@media only screen and (max-width: 360px) {
    .main-button p {
        display:none;
    }
    .main-button::after {
        content: "Split";
    }
}
/* TODO: maybe do the same for "You are in" */

.loading-image-container {

    /* height: calc(var(--size) * 2); */
    /* height: var(--size); */
    width: var(--size);
    margin-left: 8px;
    /* margin-left: 0.5rem; */
}

.loading-image {
    display: block;
    display: none;
    width: 100%;
    height: 100%;
}

.slider-container {
    margin-top: 5px;
    display: flex;
    align-items: center;
    /* gap: 20px;  */
    /* ^TODO
    Gap+ width:100% on loading bar 
    lines it up with above button & spinner
    using grid or another method may be
    more propper
    */
}
.slider-container input[type="range"]{
    min-width: 25%;
    width: 100%;
    flex-shrink: 2;
}
.slider-container p {
    color: var(--text-color);
    transition: color 600ms;

    flex-shrink: 0;
    /* width: 200px; */
    
    width: var(--size);
    margin-left: 8px;
    text-align: center;
}
.slider-container .num-universes-display {
    /* width: 200px; */
    /* margin-left:auto; */
}

.output-area {
    list-style:none; 
    padding:0;
}

.output-area li{
    margin-bottom: 30px;
    line-height: 0.85;

    /* text-align: center; */

    color: var(--text-color);
    transition: color 600ms;
}



.footer {
    display:flex;
    justify-content: space-between;
    
    align-items: center;
    flex-wrap:wrap;
    gap: 5px;

    border: 1.5px solid gray;
    /* width: 95%; */
    margin-top: 20px;
    margin-bottom: 1px;;
    margin-left: auto;
    margin-right: auto;

    transition: margin-bottom 600ms;
}

@media screen and (min-height: 1200px) {
    .footer {
        margin-bottom: 30vh;
    }
}


.footer > *{
    /* font-size: 50%; Seems to do it relative to default font size so font size variable still affects it */
    text-align: center;
    
    /* border: 1.5px solid grey; */
    padding:1px 3px;
}

/* Footer Sizing */
/* Not working properly on my phone */
.footer > *{
    font-size: min(calc(5vw - 2px), 60%);
}

@media screen and (max-width: 200px) {
    .footer > *{
        font-size: 16px ;
        /* background-color: green; */
    }
}



#server-select {
    flex-grow: 0.5;
}




/* TODO: extract transition to var probably */